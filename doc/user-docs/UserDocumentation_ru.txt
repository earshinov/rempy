Rempy. Документация пользователя


% File to be processed with [txt2tags http://txt2tags.sourceforge.net/]

=== Что это? ===

Rempy — консольная программа-напоминатель.  Механизм работы: задаёте в
специальном файле напоминалки и, когда хотите узнать список дел, запускаете
программу.  Программа похожа на давно известные
[remind http://www.roaringpenguin.com/products/remind] и
[when http://www.lightandmatter.com/when/when.html].  Если вы ещё не пробовали
использовать их, попробуйте, прежде чем знакомится с rempy.

=== Зачем ещё одна программа? ===

То, что требуется мне, с использованием when просто не реализуется, а с
использованием remind — реализуется с трудом.  При этом для каждой напоминалки
во входном файле remind приходится писать приблизительно пять строк, что меня
не удовлетворяет.  С другой стороны, в remind много возможностей, которые мне
просто не нужны и которые, на мой взгляд, делают программу сложной для
использования (посмотрите на список опций командной строки, которые принимает
remind).

Поэтому свою программу я попытался сделать как можно более расширяемой.  Я
уважаю за простоту язык программирования Python, поэтому я не только
использовал его при написании программы, но и сделал так, что и входные файлы
пишутся на нём (!).  Негативным следствием этого является то, что не получается
сделать синтаксис входного файла таким же коротким и понятным, как в when.
Итак, если вам незнаком язык программирования Python или вы не одобряете
выбор его в качестве языка описания напоминателей, вам скорее всего больше
понравятся программы-аналоги.  Если всё же вы не знаете язык, но хотите
использовать rempy, посмотрите пример входного файла и берите готовые
конструкции оттуда.

=== Описание и пример входного файла ===

Если вы уже знакомы с remind, формат описания напоминалок покажется вам
знакомым.  В противном случае, пока я не напишу собственной документации,
вам придётся руководствоваться
[документацией remind http://linux.die.net/man/1/remind] и учитывать, что в
rempy [реализованы не все функции #Sec_DifferencesFromRemind].

Расширяемость rempy заключается в том, что в программу можно относительно
легко добавлять модули, предоставляющие новые функции.  Каждый такой модуль
может расширять формат описания напоминалок новыми ключевыми словами.  Так,
в приведённом ниже файле используется функция ``deferrable``, которая позволяет
задавать для напоминалки-задания дату последнего выполнения.  Если в прошлом
есть невыполненное задание, rempy сообщит о нём.  Такая функциональность в
remind реализуется, но описание каждой напоминалки тогда занимает пять
строк, причём некоторые параметры неизбежно приходится дублировать.  В
строке описания напоминателя для задания даты последнего выполнения
используется ключевое слово ``DONE``.

При выполнении в пользовательский файл передаются объект ``runner`` и две
функции ``rem`` и ``deferrable``, которых обычно достаточно для добавления
напоминалок.

```
# -*- coding: utf-8 -*-

from rempy.Reminder import ShortcutReminder as Reminder

# Запланированные

# Периодические

# --- Еженедельные

deferrable('REM Saturday DONE 2010-08-07 MSG Обновить софт',
  satisfy=lambda date: date.toordinal() % 2)
deferrable('REM Saturday DONE 2010-08-14 MSG Резервное копирование')

# --- Ежемесячные

# первая суббота месяца
deferrable('REM Saturday 8 -7 DONE 2010-08-07 MSG Заточить кухонные ножи')

# --- Ежегодные

# последнее воскресенье октября
rem('REM Sunday November 1 -7 DONE 2009-11-01 MSG Перевести часы на час назад')
# последнее воскресенье марта
deferrable('REM Sunday April 1 -7 DONE 2010-04-01 MSG Перевести часы на час вперёд')

rem('REM June 12 MSG День рождения _____')
rem('REM August 15 MSG День рождения ____')

# Телепрограммы

def grandprix(cond, name):
  runner.add(Reminder(cond, 'Гран-При ' + name, 1))

grandprix('August 29',    'Бельгии')
grandprix('September 12', 'Италии')
grandprix('September 26', 'Сингапура')
grandprix('October 10',   'Японии')
grandprix('October 24',   'Кореи')
grandprix('November 7',   'Бразилии')
grandprix('November 14',  'Абу-Даби')
```

=== Установка ===

В первую очередь, если вы этого ещё не сделали, необходимо установить
[Python http://www.python.org/].

==== Установка программы с использованием Pip ====

Если у вас установлен [Pip http://pip.openplans.org/], можете использовать его.
К сожалению, на GitHub, где находится репозиторий rempy, нет
страницы, которую мог бы понять Pip.  Придётся скачать архив и
установить его, выполнив от имени суперпользователя команду

```
pip install <ИМЯ_АРХИВА>.tar.gz
```

Чтобы Pip автоматически установил зависимости, передайте дополнительную опцию ``-r``
с указанием пути или URL файла с описанием зависимостей.  Два таких файла лежат
в репозитории: ``http://github.com/earshinov/rempy/raw/master/requirements-minimal.txt``
содержит обязательные зависомости, ``http://github.com/earshinov/rempy/raw/master/requirements-all.txt`` —
обязательные и все рекомендуемые.  Таким образом, команда установки rempy
со всеми зависимостями выглядит так:

```
pip install <ИМЯ_АРХИВА>.tar.gz -r http://github.com/earshinov/rempy/raw/master/requirements-all.txt
```

==== Ручная установка программы ====

В случае, если у вас не установлен [Pip http://pip.openplans.org/], нужно
скачать и распаковать архив, а затем выполнить ``python setup.py install`` от
имени суперпользователя в корневом каталоге rempy.  Зависимости необходимо
установить вручную.

==== Зависимости ====

На настоящий момент rempy не содержит обязательных зависимостей.

Если вы хотите, чтобы программе через аргументы командной строки можно было
задавать даты в удобно читаемом формате, установите пакет parsedatetime
([англоязычная инструкция по установке http://code.google.com/p/parsedatetime/wiki/Installation]).
Пакет позволяет использовать
- Англоязычные фразы типа "next Sunday".  Список поддерживаемых фраз см.
  [на официальной странице parsedatetime http://code.google.com/p/parsedatetime/].
- Даты в формате пользовательской локали (например, "11.03.2011" для обозначения
  11 марта в русской локали).  Список локалей, напрямую поддерживаемый
  пакетом parsedatetime, очень скромен (в частности, не поддерживает русскую локаль),
  поэтому очень рекомендуется установить дополнительно пакет PyICU
  ([страница на Python Package Index http://pypi.python.org/pypi/PyICU]).


=== Запуск и использование ===

Основной исполняемый файл программы называется ``rem.py``.  После установки
запустите ``rem.py --help``, чтобы получить справку об опциях командной строки.
Пользователям Windows при запуске ``rem.py`` возможно придётся указывать полный
путь.

У программы есть два режима: remind и events.  В режиме events программа лишь
выводит события, попадающие в заданный интервал дат.  В режиме remind программа
может предупреждать о событии преждевременно, если во входном файле для
напоминалки задана соответствующая опция.

=== Отличия от remind ===[Sec_DifferencesFromRemind]

Отличия в функциональности:
- Не поддерживаются инструкции ``OMIT``;
- Не поддерживается указание в напоминалках времени и, соответственно,
  не реализованы функции по обработке таких напоминалок;
- Не поддерживается инструкция ``RUN`` и, соответственно, не реализованы
  функции по обработке напоминалок, вызывающих не вывод сообщения, а запуск
  команды.


Отличия в формате описания напоминалок:
- Дни недели указываются в начале строки и не могут перемешиваться с
  годом, месяцем и днём;
- Так как не поддерживаются инструкции ``OMIT``, опции ``-`` и ``--`` (delta
  или backward scanning в терминологии remind) абсолютно эквивалентны;
- Можно использовать опцию ``*`` (repeat в документации remind) в случае, когда
  дата не фиксирована (то есть когда отсутствует год, месяц или день), хотя
  в этом мало смысла;
- Инструкции ``FROM`` и ``SCANFROM`` эквивалентны.


=== Хотите помочь? ===

Прежде всего мне нужно справиться с моим TODO.  Если это вам не по душе,
можете посмотреть на список других полезных дел.

TODO:
- Перевести комментарии в коде и эту документацию на английский


Другие вещи, которыми можно заняться:
- Создавать модули расширений (как ``deferrable``), при этом старайтесь по
  минимуму расширять ядро программы;
- Реализовывать полезные функции, доступные в remind;
- Находить и исправлять ошибки в существующем коде.
